# Nginx Security Configuration for Angular PlatformV1
# OWASP compliant security headers and CSP implementation

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name platformv1.com www.platformv1.com;

    # SSL Configuration (Let's Encrypt recommended)
    ssl_certificate /etc/letsencrypt/live/platformv1.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/platformv1.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/platformv1.com/chain.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Document Root
    root /var/www/platformv1/dist;
    index index.html;

    # Security Headers (Production)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), fullscreen=(self), notifications=(self)" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    add_header Origin-Agent-Cluster "?1" always;

    # Content Security Policy (Production)
    add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'nonce-$request_id' accounts.google.com apis.google.com; style-src 'self' 'nonce-$request_id' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: blob: *.platformv1.com www.gravatar.com; connect-src 'self' api.platformv1.com wss://api.platformv1.com; frame-src 'self' accounts.google.com; worker-src 'self'; manifest-src 'self'; media-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests; block-all-mixed-content; require-sri-for script style; require-trusted-types-for 'script'; trusted-types default angular angular#unsafe-inline; report-uri /api/v1/security/csp-violations" always;

    # Remove Server Information
    server_tokens off;
    more_clear_headers Server;
    more_clear_headers X-Powered-By;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/manifest+json
        image/svg+xml;

    # Brotli Compression (if available)
    brotli on;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/manifest+json
        image/svg+xml;

    # Cache Control for Static Assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Security headers for static assets
        add_header X-Content-Type-Options "nosniff" always;
        add_header Cross-Origin-Resource-Policy "same-origin" always;
    }

    # Angular Application
    location / {
        try_files $uri $uri/ /index.html;

        # Cache control for HTML files
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # API Proxy (if needed)
    location /api/ {
        proxy_pass http://backend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # Security headers for API
        add_header X-Content-Type-Options "nosniff" always;
        add_header Cross-Origin-Resource-Policy "same-origin" always;
    }

    # CSP Violation Reporting Endpoint
    location /api/v1/security/csp-violations {
        proxy_pass http://backend_servers;
        proxy_set_header Content-Type "application/csp-report";
        proxy_method POST;
    }

    # Block access to sensitive files
    location ~ /\.(htaccess|htpasswd|env|git) {
        deny all;
        return 404;
    }

    # Block access to source maps in production
    location ~ \.map$ {
        deny all;
        return 404;
    }

    # Rate Limiting
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;
    }

    # Block common attack patterns
    location ~ /(wp-admin|wp-login|admin|phpmyadmin) {
        deny all;
        return 404;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name platformv1.com www.platformv1.com;

    # Security headers even for redirects
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    return 301 https://$server_name$request_uri;
}

# Rate Limiting Zones
http {
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;

    # Upstream Backend Servers
    upstream backend_servers {
        server 127.0.0.1:5001;
        # Add more backend servers for load balancing
        # server 127.0.0.1:5002;
    }
}

# Development Configuration (nginx-dev.conf)
server {
    listen 80;
    server_name localhost;

    root /var/www/platformv1/dist;
    index index.html;

    # Relaxed Security Headers for Development
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Development CSP (Report-Only)
    add_header Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' localhost:* 127.0.0.1:* accounts.google.com apis.google.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' data: fonts.gstatic.com; img-src 'self' data: blob: localhost:* 127.0.0.1:* www.gravatar.com; connect-src 'self' localhost:* 127.0.0.1:* ws://localhost:* wss://localhost:*; frame-src 'self' accounts.google.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; report-uri /api/v1/security/csp-violations" always;

    # Remove server information
    server_tokens off;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Development API proxy
    location /api/ {
        proxy_pass http://localhost:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}