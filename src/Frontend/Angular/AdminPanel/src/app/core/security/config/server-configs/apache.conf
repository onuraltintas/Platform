# Apache Security Configuration for Angular PlatformV1
# OWASP compliant security headers and CSP implementation

<VirtualHost *:443>
    ServerName platformv1.com
    ServerAlias www.platformv1.com
    DocumentRoot /var/www/platformv1/dist

    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/platformv1.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/platformv1.com/privkey.pem
    SSLCertificateChainFile /etc/letsencrypt/live/platformv1.com/chain.pem

    # SSL Security Settings
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder off
    SSLSessionTickets off

    # OCSP Stapling
    SSLUseStapling on
    SSLStaplingResponderTimeout 5
    SSLStaplingReturnResponderErrors off

    # Security Headers (Production)
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
    Header always set X-Frame-Options "DENY"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), fullscreen=(self), notifications=(self)"
    Header always set Cross-Origin-Opener-Policy "same-origin"
    Header always set Cross-Origin-Embedder-Policy "require-corp"
    Header always set Cross-Origin-Resource-Policy "same-origin"
    Header always set Origin-Agent-Cluster "?1"

    # Content Security Policy (Production)
    Header always set Content-Security-Policy "default-src 'none'; script-src 'self' 'nonce-%{UNIQUE_ID}e' accounts.google.com apis.google.com; style-src 'self' 'nonce-%{UNIQUE_ID}e' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: blob: *.platformv1.com www.gravatar.com; connect-src 'self' api.platformv1.com wss://api.platformv1.com; frame-src 'self' accounts.google.com; worker-src 'self'; manifest-src 'self'; media-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests; block-all-mixed-content; require-sri-for script style; require-trusted-types-for 'script'; trusted-types default angular angular#unsafe-inline; report-uri /api/v1/security/csp-violations"

    # Remove Server Information
    ServerTokens Prod
    Header unset Server
    Header unset X-Powered-By

    # Compression
    <IfModule mod_deflate.c>
        AddOutputFilterByType DEFLATE text/plain
        AddOutputFilterByType DEFLATE text/html
        AddOutputFilterByType DEFLATE text/xml
        AddOutputFilterByType DEFLATE text/css
        AddOutputFilterByType DEFLATE text/javascript
        AddOutputFilterByType DEFLATE application/xml
        AddOutputFilterByType DEFLATE application/xhtml+xml
        AddOutputFilterByType DEFLATE application/rss+xml
        AddOutputFilterByType DEFLATE application/javascript
        AddOutputFilterByType DEFLATE application/x-javascript
        AddOutputFilterByType DEFLATE application/json
        AddOutputFilterByType DEFLATE application/manifest+json
        AddOutputFilterByType DEFLATE image/svg+xml
    </IfModule>

    # Brotli Compression (if mod_brotli is available)
    <IfModule mod_brotli.c>
        BrotliCompressionQuality 6
        BrotliFilterNote Input instream
        BrotliFilterNote Output outstream
        BrotliFilterNote Ratio ratio

        LogFormat '"%r" %{outstream}n/%{instream}n (%{ratio}n%%)' brotli
        CustomLog logs/brotli_log brotli

        AddOutputFilterByType BROTLI_COMPRESS text/plain
        AddOutputFilterByType BROTLI_COMPRESS text/html
        AddOutputFilterByType BROTLI_COMPRESS text/xml
        AddOutputFilterByType BROTLI_COMPRESS text/css
        AddOutputFilterByType BROTLI_COMPRESS text/javascript
        AddOutputFilterByType BROTLI_COMPRESS application/xml
        AddOutputFilterByType BROTLI_COMPRESS application/xhtml+xml
        AddOutputFilterByType BROTLI_COMPRESS application/rss+xml
        AddOutputFilterByType BROTLI_COMPRESS application/javascript
        AddOutputFilterByType BROTLI_COMPRESS application/x-javascript
        AddOutputFilterByType BROTLI_COMPRESS application/json
        AddOutputFilterByType BROTLI_COMPRESS application/manifest+json
        AddOutputFilterByType BROTLI_COMPRESS image/svg+xml
    </IfModule>

    # Cache Control for Static Assets
    <LocationMatch "\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
        ExpiresActive On
        ExpiresDefault "access plus 1 year"
        Header set Cache-Control "public, immutable"
        Header set Vary "Accept-Encoding"

        # Security headers for static assets
        Header always set X-Content-Type-Options "nosniff"
        Header always set Cross-Origin-Resource-Policy "same-origin"
    </LocationMatch>

    # Angular Application - Fallback to index.html
    <Directory "/var/www/platformv1/dist">
        AllowOverride All
        Require all granted

        # Angular routing support
        RewriteEngine On
        RewriteBase /
        RewriteRule ^index\.html$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.html [L]

        # Cache control for HTML files
        <FilesMatch "\.html$">
            Header set Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0"
            Header set Pragma "no-cache"
            Header set Expires "0"
        </FilesMatch>
    </Directory>

    # API Proxy Configuration
    <Location "/api/">
        ProxyPreserveHost On
        ProxyPass http://localhost:5001/api/
        ProxyPassReverse http://localhost:5001/api/

        # Add security headers for API
        Header always set X-Content-Type-Options "nosniff"
        Header always set Cross-Origin-Resource-Policy "same-origin"

        # Add request ID
        RequestHeader set X-Request-ID "%{UNIQUE_ID}e"
    </Location>

    # CSP Violation Reporting Endpoint
    <Location "/api/v1/security/csp-violations">
        ProxyPass http://localhost:5001/api/v1/security/csp-violations
        ProxyPassReverse http://localhost:5001/api/v1/security/csp-violations
        RequestHeader set Content-Type "application/csp-report"
    </Location>

    # Block access to sensitive files
    <FilesMatch "(\.htaccess|\.htpasswd|\.env|\.git)">
        Require all denied
    </FilesMatch>

    # Block access to source maps in production
    <FilesMatch "\.map$">
        Require all denied
    </FilesMatch>

    # Block common attack patterns
    <LocationMatch "/(wp-admin|wp-login|admin|phpmyadmin)">
        Require all denied
    </LocationMatch>

    # Rate Limiting (if mod_security is available)
    <IfModule mod_security2.c>
        SecRuleEngine On
        SecRule REQUEST_URI "@beginsWith /api/" \
            "id:1001,phase:1,block,msg:'API Rate Limiting',\
            setvar:ip.api_req=+1,expirevar:ip.api_req=60,\
            chain"
        SecRule IP:API_REQ "@gt 100" \
            "id:1002,phase:1,block,status:429,\
            msg:'API rate limit exceeded'"
    </IfModule>

    # Custom Error Pages
    ErrorDocument 403 /error/403.html
    ErrorDocument 404 /error/404.html
    ErrorDocument 500 /error/500.html
</VirtualHost>

# Redirect HTTP to HTTPS
<VirtualHost *:80>
    ServerName platformv1.com
    ServerAlias www.platformv1.com

    # Security headers even for redirects
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"

    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>

# Development Configuration
<VirtualHost *:80>
    ServerName localhost
    DocumentRoot /var/www/platformv1/dist

    # Relaxed Security Headers for Development
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set X-XSS-Protection "1; mode=block"

    # Development CSP (Report-Only)
    Header always set Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' localhost:* 127.0.0.1:* accounts.google.com apis.google.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' data: fonts.gstatic.com; img-src 'self' data: blob: localhost:* 127.0.0.1:* www.gravatar.com; connect-src 'self' localhost:* 127.0.0.1:* ws://localhost:* wss://localhost:*; frame-src 'self' accounts.google.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; report-uri /api/v1/security/csp-violations"

    # Remove server information
    ServerTokens Prod
    Header unset Server

    <Directory "/var/www/platformv1/dist">
        AllowOverride All
        Require all granted

        # Angular routing support
        RewriteEngine On
        RewriteBase /
        RewriteRule ^index\.html$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.html [L]
    </Directory>

    # Development API proxy
    <Location "/api/">
        ProxyPreserveHost On
        ProxyPass http://localhost:5001/api/
        ProxyPassReverse http://localhost:5001/api/
    </Location>
</VirtualHost>

# Global Apache Security Settings
ServerTokens Prod
ServerSignature Off

# SSL Global Configuration
SSLStaplingCache shmcb:/var/run/ocsp(128000)

# Security Modules (enable if available)
# LoadModule security2_module modules/mod_security2.so
# LoadModule headers_module modules/mod_headers.so
# LoadModule rewrite_module modules/mod_rewrite.so
# LoadModule ssl_module modules/mod_ssl.so
# LoadModule deflate_module modules/mod_deflate.so