using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Identity.Core.Entities;

/// <summary>
/// Security alert entity for monitoring and alerting
/// </summary>
[Table("SecurityAlerts")]
[Index(nameof(UserId))]
[Index(nameof(Severity))]
[Index(nameof(Status))]
[Index(nameof(CreatedAt))]
public class SecurityAlert
{
    [Key]
    public Guid Id { get; set; } = Guid.NewGuid();

    [Required]
    [MaxLength(100)]
    public string AlertType { get; set; } = string.Empty;

    [Required]
    [MaxLength(200)]
    public string Title { get; set; } = string.Empty;

    [Required]
    [MaxLength(1000)]
    public string Description { get; set; } = string.Empty;

    [Required]
    [MaxLength(20)]
    public string Severity { get; set; } = "Medium"; // Low, Medium, High, Critical

    [Required]
    [MaxLength(20)]
    public string Status { get; set; } = "New"; // New, Acknowledged, InProgress, Resolved, Dismissed

    [MaxLength(450)]
    public string? UserId { get; set; }

    [MaxLength(255)]
    public string? DeviceId { get; set; }

    [MaxLength(45)]
    public string? IpAddress { get; set; }

    [MaxLength(128)]
    public string? SessionId { get; set; }

    [Column(TypeName = "jsonb")]
    public string AlertData { get; set; } = "{}";

    [Column(TypeName = "jsonb")]
    public string TriggerConditions { get; set; } = "{}";

    [MaxLength(100)]
    public string? RuleId { get; set; }

    [MaxLength(200)]
    public string? RuleName { get; set; }

    public DateTime CreatedAt { get; set; } = DateTime.UtcNow;

    public DateTime? AcknowledgedAt { get; set; }

    public DateTime? ResolvedAt { get; set; }

    [MaxLength(450)]
    public string? AcknowledgedBy { get; set; }

    [MaxLength(450)]
    public string? ResolvedBy { get; set; }

    [MaxLength(1000)]
    public string? Resolution { get; set; }

    [MaxLength(1000)]
    public string? Notes { get; set; }

    public Guid? GroupId { get; set; }

    public bool IsAutoGenerated { get; set; } = true;

    [MaxLength(100)]
    public string? CorrelationId { get; set; }

    public int Priority { get; set; } = 100;

    [Column(TypeName = "decimal(5,2)")]
    public double ConfidenceScore { get; set; } = 100.0;

    // Navigation Properties
    [ForeignKey(nameof(UserId))]
    public virtual ApplicationUser? User { get; set; }

    [ForeignKey(nameof(GroupId))]
    public virtual Group? Group { get; set; }

    public virtual ICollection<SecurityAlertAction> Actions { get; set; } = new List<SecurityAlertAction>();

    public virtual ICollection<AuditEvent> RelatedAuditEvents { get; set; } = new List<AuditEvent>();
}

/// <summary>
/// Security alert actions tracking
/// </summary>
[Table("SecurityAlertActions")]
public class SecurityAlertAction
{
    [Key]
    public Guid Id { get; set; } = Guid.NewGuid();

    [Required]
    public Guid SecurityAlertId { get; set; }

    [Required]
    [MaxLength(100)]
    public string ActionType { get; set; } = string.Empty; // Acknowledge, Resolve, Escalate, Comment

    [Required]
    [MaxLength(450)]
    public string PerformedBy { get; set; } = string.Empty;

    [MaxLength(1000)]
    public string? ActionDetails { get; set; }

    [Column(TypeName = "jsonb")]
    public string ActionData { get; set; } = "{}";

    public DateTime PerformedAt { get; set; } = DateTime.UtcNow;

    // Navigation Properties
    [ForeignKey(nameof(SecurityAlertId))]
    public virtual SecurityAlert? SecurityAlert { get; set; }

    [ForeignKey(nameof(PerformedBy))]
    public virtual ApplicationUser? User { get; set; }
}

/// <summary>
/// Alert rule configuration
/// </summary>
[Table("AlertRules")]
public class AlertRule
{
    [Key]
    public Guid Id { get; set; } = Guid.NewGuid();

    [Required]
    [MaxLength(200)]
    public string Name { get; set; } = string.Empty;

    [MaxLength(1000)]
    public string Description { get; set; } = string.Empty;

    [Required]
    [MaxLength(50)]
    public string Category { get; set; } = string.Empty; // Authentication, Authorization, DataAccess, Security

    [Column(TypeName = "jsonb")]
    public string Conditions { get; set; } = "{}"; // JSON rule conditions

    [Column(TypeName = "jsonb")]
    public string Actions { get; set; } = "{}"; // JSON actions to take

    [Required]
    [MaxLength(20)]
    public string Severity { get; set; } = "Medium";

    public bool IsActive { get; set; } = true;

    public int Priority { get; set; } = 100;

    [Column(TypeName = "jsonb")]
    public string NotificationChannels { get; set; } = "[]"; // JSON array of notification channels

    public TimeSpan? CooldownPeriod { get; set; } = TimeSpan.FromMinutes(5);

    public int? MaxAlertsPerHour { get; set; } = 10;

    public Guid? GroupId { get; set; }

    public DateTime CreatedAt { get; set; } = DateTime.UtcNow;

    public DateTime? UpdatedAt { get; set; }

    [MaxLength(450)]
    public string? CreatedBy { get; set; }

    [MaxLength(450)]
    public string? UpdatedBy { get; set; }

    // Navigation Properties
    [ForeignKey(nameof(GroupId))]
    public virtual Group? Group { get; set; }

    public virtual ICollection<SecurityAlert> TriggeredAlerts { get; set; } = new List<SecurityAlert>();
}